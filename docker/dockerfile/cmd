FROM dlemp/phpfpm

#start everything specific 'dlemp_cmd' file
    #start install node
RUN curl -sL https://deb.nodesource.com/setup_6.x | bash - \
    && apt-get install -y nodejs \
    && apt-get install -y libnotify-bin
RUN npm install --global gulp@^3.8.8
    #end install node

    #start install phar installer
COPY docker/docker-config/installphar /usr/local/bin/installphar
RUN chmod +x /usr/local/bin/installphar && apt-get -y install curl wget
    #end install phar installer

    #start install php related tools
RUN apt-get -y install curl git \
    && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer && mkdir -p ~/.composer/cache/ && chmod -R 777 ~/.composer/cache/ \
    && composer global require "laravel/installer" \
    && installphar https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar phpcs && phpcs --config-set default_standard PSR2 \
    && installphar https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar phpcbf && phpcbf --config-set default_standard PSR2 \
    && apt-get -y install libxslt-dev && docker-php-ext-install xsl && apt-get -y install graphviz && installphar http://www.phpdoc.org/phpDocumentor.phar phpdoc
ENV PATH /usr/share/nginx/WEBAPP/vendor/bin:/root/.composer/vendor/bin:$PATH
    #end install php related tools

    #start install tools for benchmarking performance
RUN apt-get -y install apache2-utils
    #end install tools for benchmarking performance

    #start install vim
RUN apt-get -y install ctags vim
RUN git clone https://github.com/rasodu/dotfiles.git ~/.dotfiles
#RUN ~/.dotfiles/install.sh && ~/.dotfiles/link.sh
    #end install vim

    #start define how to run and stop the container
STOPSIGNAL SIGKILL
CMD phpcs --config-show && /bin/bash -c "while true; do echo 1; sleep 1; done"
    #end define how to run and stop the container
#end everything specific 'dlemp_cmd' file

#start change permissions so some software can be run under all user accounts
RUN mkdir /.composer && mkdir /.npm
RUN chmod 777 /.composer && chmod 777 /.npm && chmod 777 /usr/share/nginx && chmod 777 /root && chmod 777 /root/.composer
#end change permissions so some software can be run under all user accounts

#start add workaround for Laravel Elixir on windows VM
RUN ln -s /usr/share/nginx/WEBAPP/package.json /usr/share/nginx/package.json
EXPOSE 3000 3001
#end add workaround for Laravel Elixir on windows VM
