docker run --name some-memcache -d memcached:1.4.25 memcached -p 11211 -m 64

docker build -t nginx-test-image NGINX
docker run --name some-nginx -d -p 8080:80 nginx-test-image

docker build -t phpfpm-test-image PHP-FPM
docker run --name some-phpfpm -p 9000:9000 phpfpm-test-image
OR
docker-machine ssh default //docker-machine ls  <- You need to ssh because opening '/bin/bash' from windows doesn't work
cd "/c/Users/bhawnaamin/DLEMP/"
docker run -i -t --name some-phpfpm  -p 9000:9000 phpfpm-test-image /bin/bash
php-fpm -D


//TO DO
- Configure php session to use memcached.
- Figure out a way to start a container from 'dlemp_cli' image without needed to mount volume each time.

//start test server
	http://192.168.99.100/page1.htm
	http://192.168.99.100/page2.php


//Using "docker-compose"
  docker-compose build
  docker-compose up
  Ctrl + C
  docker-compose rm
OR
  docker-compose build
  docker-compose up -d
  docker-compose ps
  docker-compose stop
  docker-compose ps
  docker-compose start
  docker-compose ps
  docker-compose stop
  docker-compose ps
  docker-compose rm


//start temporary 'dlemp_cli' instance
docker-machine ssh <machine-name> //docker-machine ssh default
docker run -it --rm -v /c/Users/<username>/DLEMP/WEBAPP:/usr/share/nginx/WEBAPP dlemp_cmd /bin/bash
docker run -it --rm -v /c/Users/bhawnaamin/DLEMP/WEBAPP:/usr/share/nginx/WEBAPP dlemp_cmd /bin/bash
	//start new laravel install
	cd /usr/share/nginx/WEBAPP && ~/.composer/vendor/bin/laravel new temp-laravel && mv temp-laravel/{.,}* .
	ls temp-laravel -al //make sure this folder is empty
	rm -r temp-laravel //remove empty folder
	//end new laravel install
	//start run laravel phpunit
	vendor/bin/phpunit --version
	//end run laravel phpunit
//end temporary 'dlemp_cli' instance


//start create generic docker-machine
mkdir ~/DLEMP-vagrant-test && vagrant init ubuntu/trusty64 && vagrant up
ssh -L 8080:127.0.0.1:80 -L 2376:127.0.0.1:2376 vagrant@127.0.0.1 -p 2222
sudo nano /etc/sudoers.d/AllowOthersToSudoWithPassword
		User_Alias     EVERYONE = <user1>[,<user2>]...
		EVERYONE       ALL = (ALL) NOPASSWD: ALL
cp .vagrant/machines/default/virtualbox/private_key ~/.ssh/generic-machine-01-prv-key
docker-machine create -d generic --generic-ip-address 127.0.0.1 --generic-ssh-key ~/.ssh/generic-machine-01-prv-key --generic-ssh-user vagrant --generic-ssh-port 2222 generic-machine-01
eval $(docker-machine env generic-machine-01)
docker-machine rm generic-machine-01
*Note: Make sure port '2376' on generic host is open for the docker-client to connect.
http://127.0.0.1:8080/page1.htm <- This doesn't work since volume can not be mounted to generic machine. But nginx will still display page not found error.
//end create generic docker-machine
